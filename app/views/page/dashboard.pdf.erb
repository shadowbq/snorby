<% extend ApplicationHelper %>

<% content_for :pdf_header do %>
	<br />
	<i><%= @start_time.strftime('%A, %B %d, %Y %I:%M %p') %> - <%= @end_time.strftime('%A, %B %d, %Y %I:%M %p') %></i>
<% end %>

<%= stylesheet 'jquery', 'jquery.jqplot.min' %>
<% javascript :footer,  'jquery', 'jquery-ui', 'jquery.jqplot.min', 'jqplot.plugins.min', 'sparkline' %>

<% content_for :footer do %>

	<script type="text/javascript">
		
		 $.dash = {};

		  <% @sensor_metrics.each_with_index { |sensor, i| %>
		  	var s<%= i %> = <%= sensor[:data] %>; 
		  <% } %>
		  		  
		  var ticks = <%= @ticks %>;
		 
		  $.dash.events = $.jqplot ('events-graph', [<%= @series %> ], {
		      title: "Event Count vs Time By Sensor",
		      series:[
		        <% @sensor_metrics.each {|sensor| %> 
		        {label:'<%= sensor[:name] %>'}, 
		        <% } %>
		        
		        ],
		      axesDefaults: {
		        labelRenderer: $.jqplot.CanvasAxisLabelRenderer,
		        tickRenderer: $.jqplot.CanvasAxisTickRenderer
		      },
		      seriesDefaults: {
		          rendererOptions: {
		              smooth: true
		          }
		      },
		      highlighter: { show: false },
			  grid: { drawGridlines: true },
			  cursor: { show: false },
		      legend: { show: false },
		      axes: {
		        xaxis: {
		        	tickOptions:{ showGridline:false},	 
		        	ticks: ticks,
		        	pad: 0,
				<% if (@range == 'year' || @range == 'quarter') %>
					label: 'Month of Year'
				<% elsif (@range == 'month' || @range == 'last_month') %>
					label: 'Date of Month'
				<% elsif (@range == 'week' || @range == 'last_week') %>
					label: 'Date Of Week'
				<% elsif @range == 'last_24' %>
  					label: 'Last 24 Hours'
				<% else %>
					label: 'Hour of Day'
				<% end %>
		          
		        },
		        yaxis: {

		        }
		      }
		    });
		
		 var ticks = <%= @ticks %>;
		 
		 $.dash.proto = $.jqplot ('protocol-graph', [[<%= @tcp.join(', ') %>], [<%= @udp.join(', ') %>], [<%= @icmp.join(', ') %>] ], {
		      title: "Protocol Count vs Time",
		      series:[
		        {label:'tcp', markerOptions: { style:"circle" }}, 
		        {label:'ucp', markerOptions: { style:"diamond" }},
		        {label:'icmp', markerOptions: { style:"filledSquare" }}
		        ],
		      axesDefaults: {
		        labelRenderer: $.jqplot.CanvasAxisLabelRenderer,
		        tickRenderer: $.jqplot.CanvasAxisTickRenderer
		      },
		      
		      seriesDefaults: {
		          rendererOptions: {
		              smooth: true
		          }
		      },
		      highlighter: { show: false },
			  grid: { drawGridlines: true },
			  cursor: { show: false },
		      legend: { show: false },
		      axes: {
		        xaxis: {
		        	tickOptions:{ showGridline:false},	 
		        	ticks: ticks,
		        	pad: 0,
				<% if (@range == 'year' || @range == 'quarter') %>
					label: 'Month of Year'
				<% elsif (@range == 'month' || @range == 'last_month') %>
					label: 'Date of Month'
				<% elsif (@range == 'week' || @range == 'last_week') %>
					label: 'Date Of Week'
				<% elsif @range == 'last_24' %>
  					label: 'Last 24 Hours'
				<% else %>
					label: 'Hour of Day'
				<% end %>
		          
		        },
		        yaxis: {      	
		          
		        }
		      }
		    });
		
			var ticks = <%= @ticks %>;
		 
         $.dash.severity = $.jqplot ('severity-graph', [[<%= @high.join(', ') %>], [<%= @medium.join(', ') %>], [<%= @low.join(', ') %>] ], {
		      title: "Severity Count vs Time",
		      seriesColors:['#FF0000', '#FAB90A', '#3A781A'],
		      series:[
		        {label:'High Severity'}, 
		        {label:'Medium Severity'},
		        {label:'Low Severity'}
		        ],
		      seriesDefaults: {
		          rendererOptions: {
		              smooth: true
		          }
		      },  
		      highlighter: {
			       show: true,
			       sizeAdjust: 9.5
			  },
			  grid: { drawGridlines: true },
			  cursor: { show: false },
		      legend: { show: false },
		      axesDefaults: {
		        labelRenderer: $.jqplot.CanvasAxisLabelRenderer,
		        tickRenderer: $.jqplot.CanvasAxisTickRenderer
		      },
		      axes: {
		        xaxis: {
		        	tickOptions:{ showGridline:false},	 
		        	ticks: ticks,
		        	pad: 0,
				<% if (@range == 'year' || @range == 'quarter') %>
					label: 'Month of Year'
				<% elsif (@range == 'month' || @range == 'last_month') %>
					label: 'Date of Month'
				<% elsif (@range == 'week' || @range == 'last_week') %>
					label: 'Date Of Week'
				<% elsif @range == 'last_24' %>
  					label: 'Last 24 Hours'
				<% else %>
					label: 'Hour of Day'
				<% end %>
		          
		        },
		        yaxis: {
		                 	
	        	}
		      }
		    });
		
    $('#sev1-graph').sparkline([<%= @high.join(',') %>], { 
        barWidth: 6, height: 40, type: 'bar', barColor: sev1_bg_color 
     });
    
    $('#sev2-graph').sparkline([<%= @medium.join(',') %>], { 
      barWidth: 6, height: 40, type: 'bar', barColor: sev2_bg_color 
    });

    $('#sev3-graph').sparkline([<%= @low.join(',') %>], { 
      barWidth: 6, height: 40, type: 'bar', barColor: sev3_bg_color 
    });
		
	</script>

<% end %>

<div class='table-holder'>
	<h2>Sensors</h2>
	<table border="0" cellspacing="0" cellpadding="0">
		<tr>
			<th>Name</th>
			<th>Event Count</th>
		</tr>
		<% @sensor_metrics.sort{|a,b| -1*(a[1]<=>b[1]) }.each do |hash| %>
		<tr>
			<td><%= hash[:name] %></td>
			<td style='width:100px'><%= hash[:data].sum %></td>
		</tr>
		<% end %>
	</table>
	
	<div id='events-graph' style='' class='dashboard-graph'></div>
	
</div>

<div class='table-holder'>
	<h2>Severities</h2>
	<table border="0" cellspacing="0" cellpadding="0">
		<tr>
			<th>High Severity (<%= @high.sum %>)</th>
			<th>Medium Severity (<%= @medium.sum %>)</th>
			<th>Low Severity (<%= @low.sum %>)</th>
			<th>Total</th>
		</tr>
		<tr>
			<td style='width:200px'><div id="sev1-graph" style='float:left;'></div></td>
			<td style='width:200px'><div id="sev2-graph" style='float:left;'></div></td>
			<td style='width:200px'><div id="sev3-graph" style='float:left;'></div></td>
			<td style='width:100px'><%= @event_count %></td>
		</tr>
	</table>
	
	<div id='severity-graph' style='' class='dashboard-graph'></div>
	
</div>

<div class='table-holder'>
	<h2>Protocols</h2>
	<table border="0" cellspacing="0" cellpadding="0">
		<tr>
			<th>TCP Count</th>
			<th>UDP Count</th>
			<th>ICMP Count</th>
			<th>Total</th>
		</tr>
		<tr>
			<td style='width:200px'><%= @tcp.sum %></div></td>
			<td style='width:200px'><%= @udp.sum %></td>
			<td style='width:200px'><%= @icmp.sum %></td>
			<td style='width:100px'><%= @event_count %></td>
		</tr>
	</table>
	
	<div id='protocol-graph' style='' class='dashboard-graph'></div>
	
</div>

<div class='table-holder'>
	<h2>Top 15 Signatures</h2>
	<table border="0" cellspacing="0" cellpadding="0">
		<tr>
			<th>Signature Name</th>
			<th>Percentage</th>
			<th>Event Count</th>
		</tr>
		<% sig_total = @signature_metrics.sort{|a,b| -1*(a[1]<=>b[1]) }.map(&:last).sum %>
		<% @signature_metrics.sort{|a,b| -1*(a[1]<=>b[1]) }.each do |name, count| %>
			<tr>
				<td><%= truncate(name.to_s, :length => 65) %></td>
				<td style='width:100px'><%= percentage_for(count, sig_total) %>%</td>
				<td style='width:100px'><%= count %></td>
			</tr>
		<% end %>
	</table>
</div>

<div class='table-holder'>
	<h2>Top 10 Source Addresses</h2>
	<table border="0" cellspacing="0" cellpadding="0">
		<tr>
			<th>Source IP Address</th>
			<th>Percentage</th>
			<th>Event Count</th>
		</tr>

		<% source_total = @src_metrics.map(&:last).sum %>
		<% src_count = 0 %>
		<% @src_metrics.sort{|a,b| -1*(a[1]<=>b[1]) }.each do |name, count| %>
		
		<% break if src_count >= 10 %>
			<tr>
				<td><%= name %></td>
				<td style='width:100px'><%= percentage_for(count, source_total) %>%</td>
				<td style='width:100px'><%= count %></td>
			</tr>
			
			<% src_count += 1 %>
			
		<% end %>

	</table>
</div>

<div class='table-holder'>
	<h2>Top 10 Destination Addresses</h2>
	<table border="0" cellspacing="0" cellpadding="0">
		<tr>
			<th>Destination IP Address</th>
			<th>Percentage</th>
			<th>Event Count</th>
		</tr>

		<% destination_total = @dst_metrics.map(&:last).sum %>
		<% dst_count = 0 %>
		<% @dst_metrics.sort{|a,b| -1*(a[1]<=>b[1]) }.each do |name, count| %>
		<% break if dst_count >= 10 %>
		
			<tr>
				<td><%= name %></td>
				<td style='width:100px'><%= percentage_for(count, destination_total) %>%</td>
				<td style='width:100px'><%= count %></td>
			</tr>
			
			<% dst_count += 1 %>
			
		<% end %>

	</table>
</div>
